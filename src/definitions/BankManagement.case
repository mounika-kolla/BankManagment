<case id="BankManagement.case" name="BankManagement" description="BankManagement" guid="_r145c">
    <caseFileModel>
        <caseFileItem id="_r145c_4" name="CustomerType" multiplicity="ExactlyOne" definitionRef="customertype.cfid"/>
        <caseFileItem id="_r145c_13" name="ComplaintDetails" multiplicity="ExactlyOne" definitionRef="complaintdetails.cfid"/>
        <caseFileItem id="_r145c_22" name="SignUp" multiplicity="ExactlyOne" definitionRef="signup.cfid"/>
        <caseFileItem id="_r145c_38" name="ValidationStatus" multiplicity="ExactlyOne" definitionRef="validationstatus.cfid"/>
    </caseFileModel>
    <casePlanModel id="cm__r145c_0" name="BankManagement" autoComplete="true">
        <planItem id="pi__r145c_0" name="Registration" definitionRef="_r145c_0"/>
        <planItem id="pi__r145c_31" name="Validate and Assign " definitionRef="_r145c_31"/>
        <humanTask id="ht__r145c_0" name="CustomerType" isBlocking="true">
            <inputs id="_r145c_5" name="CustomerType" bindingRef="_r145c_4"/>
            <outputs id="_r145c_7" name="CustomerType" bindingRef="_r145c_4">
                <extensionElements mustUnderstand="false">
                    <cafienne:implementation xmlns:cafienne="org.cafienne" required="true"/>
                </extensionElements>
            </outputs>
            <extensionElements mustUnderstand="false">
                <cafienne:implementation xmlns:cafienne="org.cafienne" humanTaskRef="CustomerType.humantask">
                    <parameterMapping id="_r145c_6" sourceRef="_r145c_5" targetRef="_nLCa_CustomerType"/>
                    <parameterMapping id="_r145c_8" sourceRef="_1C0K_CustomerType" targetRef="_r145c_7">
                        <transformation id="_r145c_15" name="Expression_2" language="spel">
                            <body>
                                <![CDATA[CustomerType]]>
                            </body>
                        </transformation>
                    </parameterMapping>
                </cafienne:implementation>
            </extensionElements>
        </humanTask>
        <humanTask id="ht__r145c_1" name="RaiseAComplaint" isBlocking="true">
            <inputs id="_r145c_16" name="ComplaintDetails" bindingRef="_r145c_13"/>
            <inputs id="_r145c_20" name="CustomerType" bindingRef="_r145c_4"/>
            <inputs id="_r145c_36" name="CustomerID" bindingRef="_r145c_22"/>
            <outputs id="_r145c_21" name="ComplaintDetails" bindingRef="_r145c_13"/>
            <extensionElements mustUnderstand="false">
                <cafienne:implementation xmlns:cafienne="org.cafienne" humanTaskRef="RaiseAComplaint.humantask">
                    <parameterMapping id="_r145c_17" sourceRef="_r145c_16" targetRef="_kaHF_ComplaintDetails"/>
                    <parameterMapping id="_r145c_19" sourceRef="_Urkz_ComplaintDetails" targetRef="_r145c_21"/>
                </cafienne:implementation>
            </extensionElements>
        </humanTask>
        <humanTask id="ht__r145c_2" name="SignUp" isBlocking="true">
            <inputs id="_r145c_26" name="SignUp" bindingRef="_r145c_22"/>
            <outputs id="_r145c_28" name="SignUp" bindingRef="_r145c_22"/>
            <outputs id="_r145c_34" name="CustomerID" bindingRef="_r145c_22"/>
            <extensionElements mustUnderstand="false">
                <cafienne:implementation xmlns:cafienne="org.cafienne" humanTaskRef="SignUp.humantask">
                    <parameterMapping id="_r145c_27" sourceRef="_r145c_26" targetRef="_lIyM_SignUp"/>
                    <parameterMapping id="_r145c_29" sourceRef="_7Tx0_SignUp" targetRef="_r145c_28"/>
                    <parameterMapping id="_r145c_32" sourceRef="_OT5y_CustomerID" targetRef="_r145c_34">
                        <transformation id="_r145c_33" name="Expression_3" language="spel">
                            <body>
                                <![CDATA[SignUp.CustomerID]]>
                            </body>
                        </transformation>
                    </parameterMapping>
                </cafienne:implementation>
            </extensionElements>
        </humanTask>
        <humanTask id="ht__r145c_3" name="Validate" isBlocking="true">
            <inputs id="_r145c_45" name="ComplaintDetails" bindingRef="_r145c_13"/>
            <outputs id="_r145c_47" name="ValidationStatus" bindingRef="_r145c_38"/>
            <extensionElements mustUnderstand="false">
                <cafienne:implementation xmlns:cafienne="org.cafienne" humanTaskRef="Validate.humantask">
                    <parameterMapping id="_r145c_46" sourceRef="_r145c_45" targetRef="_YbgD_ComplaintDetails"/>
                    <parameterMapping id="_r145c_48" sourceRef="_K4gi_ValidationStatus" targetRef="_r145c_47"/>
                </cafienne:implementation>
            </extensionElements>
        </humanTask>
        <stage id="_r145c_0" name="Registration" autoComplete="true">
            <planItem id="pi_ht__r145c_0" name="CustomerType" definitionRef="ht__r145c_0"/>
            <planItem id="pi_ht__r145c_1" name="RaiseAComplaint" definitionRef="ht__r145c_1" entryCriteriaRefs="crit__r145c_0"/>
            <planItem id="pi_ht__r145c_2" name="SignUp" definitionRef="ht__r145c_2" entryCriteriaRefs="crit__r145c_1"/>
            <sentry id="crit__r145c_0" name="Sentry_0">
                <ifPart id="_r145c_11" name="IfPart_0" contextRef="_r145c_4">
                    <condition id="_r145c_12" name="Expression_0" language="spel">
                        <body>
                            <![CDATA[CustomerType.Type=="Exisiting_User"]]>
                        </body>
                    </condition>
                </ifPart>
                <planItemOnPart id="_r145c_10" name="PlanItemOnPart_0" sourceRef="pi_ht__r145c_0">
                    <standardEvent>complete</standardEvent>
                </planItemOnPart>
            </sentry>
            <sentry id="crit__r145c_1" name="Sentry_1">
                <ifPart id="_r145c_24" name="IfPart_1" contextRef="_r145c_4">
                    <condition id="_r145c_25" name="Expression_1" language="spel">
                        <body>
                            <![CDATA[CustomerType.Type!="Exisiting_User"]]>
                        </body>
                    </condition>
                </ifPart>
                <planItemOnPart id="_r145c_23" name="PlanItemOnPart_1" sourceRef="pi_ht__r145c_0">
                    <standardEvent>complete</standardEvent>
                </planItemOnPart>
            </sentry>
        </stage>
        <stage id="_r145c_31" name="Validate and Assign " autoComplete="true">
            <planItem id="pi_ht__r145c_3" name="Validate" definitionRef="ht__r145c_3"/>
        </stage>
    </casePlanModel>
    <input id="_r145c_3" name="CustomerType" bindingRef="_r145c_4"/>
    <input id="_r145c_18" name="ComplaintDetails" bindingRef="_r145c_13"/>
    <input id="_r145c_30" name="SignUp" bindingRef="_r145c_22"/>
    <extensionElements mustUnderstand="false">
        <cafienne:start-case-model xmlns:cafienne="org.cafienne">{
	"schema": {
		"title": "Bank",
		"type": "object",
		"required": [
			"CustomerType"
		],
		"properties": {
			"CustomerType": {
				"title": "CustomerType",
				"type": "object",
				"properties": {
					"Type": {
						"type": "string",
						"title": "Type",
						"enum": [
							"Exisiting_User",
							"New_User"
						],
						"enumNames": [
							"Existing User",
							"New User"
						]
					}

				}
			}
		}
	}

}</cafienne:start-case-model>
    </extensionElements>
</case>